angular.module("synthesizer.templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("templates/app.html","\n<ion-side-menus>\n  <ion-pane ion-side-menu-content=\"\">\n    <ion-nav-bar class=\"top-nav\">\n      <ion-nav-buttons side=\"left\">\n        <button menu-toggle=\"left\" class=\"button button-icon icon ion-navicon-round\"></button>\n      </ion-nav-buttons>\n      <ion-nav-buttons side=\"right\">\n        <button menu-toggle=\"right\" class=\"button button-icon icon ion-music-note\"></button>\n      </ion-nav-buttons>\n      <ion-nav-back-button class=\"button-clear\"><i class=\"icon ion-chevron-left\"></i> Back</ion-nav-back-button>\n    </ion-nav-bar>\n    <ion-nav-view name=\"main-content\" animation=\"slide-left-right\"></ion-nav-view>\n  </ion-pane>\n  <ion-side-menu side=\"right\" enable-menu-with-back-views=\"true\">\n    <ion-header-bar center=\"center\" class=\"bar-stable\">\n      <h1 class=\"title\">Prototype 17         </h1>\n    </ion-header-bar>\n    <ion-content class=\"has-header\">\n      <div class=\"list\">\n        <div nav-clear=\"\" menu-close=\"\" ui-sref=\"app.patches\" class=\"item\">Patches</div>\n      </div>\n    </ion-content>\n  </ion-side-menu>\n</ion-side-menus>");
$templateCache.put("templates/info.html","\n<html>\n  <body>\n    <!--This template loads for the \'tab.about\' state (app.js)\n    -->\n    <ion-view view-title=\"About Ionic\">\n      <ion-content has-header=\"true\" has-tabs=\"true\" padding=\"true\" class=\"text-center\">\n        <h2>How to use 17th dimensional prototype synthesizer:</h2>\n        <h3>use control to cycle between modes</h3>\n        <p>modes under development (in progress*):</p>\n        <ul>\n          <li>\n            <h3>keys *</h3>\n            <p> press the letters to control oscillators</p>\n          </li>\n          <li>\n            <h3>sampler * </h3>\n            <p>hold shift and hold down another key to begin recording, release the key (while still holding shift) to end the sample</p>\n            <p>to play back press without shift</p>\n            <p>there is no warning for over writing samples </p>\n          </li>\n          <li><b>sequencer</b></li>\n          <li><b>patch library</b></li>\n        </ul><br/>\n        <button onclick=\"window.location=&quot;/#/app/synth&quot;;window.location.reload()\" class=\"button button-assertive\">Begin! </button>\n      </ion-content>\n    </ion-view>\n  </body>\n</html>");
$templateCache.put("templates/node.html","\n<div class=\"col icon button\">{{ngModel.active}} ssss</div>");
$templateCache.put("templates/patch-detail.html","\n<html>\n  <body>\n    <!--\n    This template loads for the \'tab.pet-detail\' state (app.js)\n    \'pet\' is a $scope variable created in the PetCtrl controller (controllers.js)\n    The PetCtrl pulls data from the Pets service (service.js)\n    The Pets service returns an array of pet data\n    -->\n    <ion-view view-title=\"{{pet.title}}\">\n      <ion-content has-header=\"true\" padding=\"true\">\n        <p>&lcub;&lcub; pet&period;description &rcub;&rcub;</p>\n        <p><a href=\"#/tab/pets\" class=\"button button-small icon ion-arrow-left-b\"> All Pets</a></p>\n      </ion-content>\n    </ion-view>\n  </body>\n</html>");
$templateCache.put("templates/patch-index.html","\n<html>\n  <body>\n    <!--\n    This template gets placed in the Pet tab\'s <nav-view> directive.\n    It was wired up in the app config (app.js)\n    The \'patch\' data comes from its $scope within Patch indexCtrl (controller.js)\n    -->\n    <ion-view view-title=\"Patch Information\">\n      <ion-content has-header=\"true\" has-tabs=\"true\">\n        <ion-list>\n          <ion-item ng-repeat=\"pet in pets\" type=\"item-text-wrap\" href=\"#/tab/pet/{{pet.id}}\">\n            <h3>&lcub;&lcub;pet&period;title&rcub;&rcub;</h3>\n            <p>&lcub;&lcub;pet&period;description&rcub;&rcub;</p>\n          </ion-item>\n        </ion-list>\n      </ion-content>\n    </ion-view>\n  </body>\n</html>");
$templateCache.put("templates/synth.html","\n<html>\n  <body>\n    <!--This template loads for the \'tab.adopt\' state (app.js)\n    -->\n    <ion-view view-title=\"Synth\">\n      <ion-content has-header=\"true\" has-tabs=\"true\">\n        <div class=\"synth\">\n          <div class=\"row\">\n            <div class=\"col\">.</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">.\n              <div id=\"download\"></div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\"></div>\n            <div class=\"col-50\">\n              <canvas id=\"hud\" width=\"500px\" height=\"108px\" class=\"col\"></canvas>\n            </div>\n            <div class=\"col\">\n              <div class=\"icon button button-icon ion-mic-wand\"></div>\n              <select ng-model=\"filterType\" ng-change=\"setFilterType(filterType)\">\n                <option ng-repeat=\"filterMode in filter.getFilterModes()\" ng-value=\"filterMode\">{{filterMode}}</option>\n              </select>\n            </div>\n            <div class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" ng-change=\"updateGain(outputVolume,\'output\')\" ng-model=\"outputVolume\"/>\n            </div>\n            <div class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" ng-change=\"updateGain(inputVolume,\'input\')\" ng-model=\"inputVolume\"/>\n            </div>\n            <div ng-show=\"filter.supports(&quot;Q&quot;)\" class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"2000\" ng-change=\"filter.setQ(q)\" ng-model=\"q\"/>\n            </div>\n            <div ng-show=\"filter.supports(&quot;gain&quot;)\" class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"200\" ng-change=\"filter.setGain(g)\" ng-model=\"g\"/>\n            </div>\n            <div ng-show=\"filter.supports(&quot;detune&quot;)\" class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"2000\" ng-change=\"filter.setDetune(d)\" ng-model=\"d\"/>\n            </div>\n            <div ng-show=\"filter.supports(&quot;frequency&quot;)\" class=\"col\">\n              <input type=\"range\" min=\"0\" max=\"1000\" ng-change=\"filter.setFrequency(f)\" ng-model=\"f\"/>\n            </div>\n            <div class=\"col\">\n              <div class=\"icon button button-icon ion-planet\"></div>\n            </div>\n            <div class=\"col\"></div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">{{getState()}}</div>\n          </div>\n          <div class=\"row wave-form\">\n            <canvas id=\"inputWaveForm\" width=\"600\" height=\"200\" class=\"col\"></canvas>\n            <canvas id=\"outputWaveForm\" width=\"600\" height=\"200\" class=\"col\"></canvas>\n          </div>\n          <div class=\"row\"></div>\n          <div class=\"row\">\n            <div class=\"col icon button button-icon ion-more\"></div>\n            <div class=\"col icon button button-icon ion-speedometer\"></div>\n            <div class=\"col icon button button-icon ion-chevron-up\"></div>\n            <div class=\"col icon button button-icon ion-stats-bars\"></div>\n            <div class=\"col icon button button-icon ion-scissors\"></div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\"></div>\n            <div class=\"col\"></div>\n            <div class=\"col icon button button-icon ion-chevron-left\"></div>\n            <div ng-class=\"recording()?&quot;red&quot;:&quot;&quot;\" ng-click=\"toggleRecording()\" class=\"col icon button button-icon ion-record\"></div>\n            <div class=\"col icon button button-icon ion-chevron-right\"></div>\n            <div class=\"col\"></div>\n            <div class=\"col\"></div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col icon button button-icon ion-cube\"></div>\n            <div class=\"col icon button button-icon ion-knife\"></div>\n            <div class=\"col icon button button-icon ion-chevron-down\"></div>\n            <div class=\"col icon button button-icon ion-fork\"></div>\n            <div class=\"col icon button button-icon ion-grid\">         </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">.</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <input ng-model=\"rootFrequency\" ng-change=\"setRootFrequency(rootFrequency)\" type=\"number\"/>\n            </div>\n            <div ng-click=\"toggleRecording()\" ng-class=\"sampling()?&quot;blue&quot;:&quot;&quot;\" class=\"col icon button button-icon ion-mic-c\"></div>\n            <div ng-click=\"toggleInstantLoop()\" ng-class=\"instantLoopEnabled()?&quot;blue&quot;:&quot;&quot;\" class=\"col icon button button-icon ion-refresh\"></div>\n          </div>\n        </div>\n      </ion-content>\n    </ion-view>\n  </body>\n</html>");}]);